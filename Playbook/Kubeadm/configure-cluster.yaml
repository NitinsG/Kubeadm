---

- hosts: nodes
  tasks:
#   - name: Install build-essential
#     apt: name=build-essential state=present

#   - name: Install the libselinux-python package
#     apt: name=['python-selinux','selinux-utils','selinux-policy-*'] state=present 
 
#   - name: disable SELinux on reboot
#     selinux:
#       state: disabled

   - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present

   - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
     sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present

   - name: Remove swapfile from /etc/fstab
     mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
     with_items:
      - swap
      - none

   - name: Disable swap
     command: swapoff -a
     when: ansible_swaptotal_mb > 0


- hosts: master-1
  tasks:
   - name: check if rules file exists
     stat: 
      path: /root/.ssh/id_rsa
     register: key_exists       
   
   - name : Generate ssh keys
     shell: yes "/root/.ssh/id_rsa" | sudo ssh-keygen -t rsa -N ""    
     when: key_exists.stat.exists == false

   - name: Copy the key rest of the servers
     shell: cat /root/.ssh/id_rsa.pub 
     register: command_output 

   - name: Register dummy host with variable
     add_host:
       name: "DUMMY_HOST"
       PLAY1VAR_NEW: "{{ command_output.stdout }}"  

- hosts: master-2,master-3
  tasks:      
   - name: Check .ssh directory
     file:
      path: /root/.ssh
      state: directory
    
   - name: Copy to authorized key
     shell: echo "{{ hostvars['DUMMY_HOST']['PLAY1VAR_NEW'] }}" >> /root/.ssh/authorized_keys

   - name: Check file Permission
     file:
      path: /root/.ssh/authorized_keys
      owner: root
      group: root
      mode: '0600'
